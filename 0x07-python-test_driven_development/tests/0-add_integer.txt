>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(1,-2)
-1
>>> 
>>> add_integer(1,-2.5)
-1
>>> add_integer(1,-inf)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'inf' is not defined
>>> add_integer(1,"-inf")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 26, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer("inf","-inf")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 24, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer("inf",1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 24, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(0,0)
0
